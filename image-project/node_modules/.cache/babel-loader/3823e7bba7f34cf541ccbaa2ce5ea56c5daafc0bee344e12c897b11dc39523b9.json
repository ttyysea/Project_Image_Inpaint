{"ast":null,"code":"var _jsxFileName = \"C:\\\\EraserImage\\\\amonnatt_image-project\\\\undo\\\\image-project\\\\src\\\\components\\\\DrawRectangle\\\\DrawRectangle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./DrawRectangle.css\";\nimport { HiArrowUturnRight, HiArrowUturnLeft } from \"react-icons/hi2\";\nimport { AiOutlineDownload } from \"react-icons/ai\";\nimport { CiImageOn } from \"react-icons/ci\";\nimport Loading from \"../Loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawRectangle = () => {\n  _s();\n  const [brushSize, setBrushSize] = useState(20);\n  const [brushColor, setBrushColor] = useState(\"rgba(255, 199, 122)\");\n  const currentBrushSize = useRef(20); // ตั้งค่าเริ่มต้นเป็น 20 หรือค่าเริ่มต้นที่คุณต้องการ\n\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [file, setFile] = useState();\n  const [imageDimensions, setImageDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [imageApi, setImageApi] = useState(null);\n  const [originalImage, setOriginalImage] = useState(null);\n  const fileInputRef = useRef(null);\n  const [isLoading, setLoading] = useState(false);\n  const [canDownload, setCanDownLoad] = useState(false);\n  useEffect(() => {\n    setupCanvas();\n  }, [brushSize, brushColor]);\n  useEffect(() => {\n    drawImageOnCanvas();\n  }, [file]);\n  const setupCanvas = () => {\n    const canvas = canvasRef.current;\n    const currentSize = currentBrushSize.current; // เก็บค่า currentBrushSize.current เพื่อให้ไม่รีเฟรช Canvas ทุกครั้ง\n    if (canvas.width !== 500 || canvas.height !== 500 || contextRef.current.lineWidth !== currentSize) {\n      canvas.width = 500;\n      canvas.height = 500;\n      const context = canvas.getContext(\"2d\");\n      context.lineCap = \"round\";\n      context.lineJoin = \"round\";\n      context.strokeStyle = \"black\";\n      context.lineWidth = currentSize;\n      context.strokeStyle = brushColor;\n      contextRef.current = context;\n    }\n  };\n  const handleBrushSizeChange = event => {\n    const newSize = parseInt(event.target.value);\n    currentBrushSize.current = newSize;\n    setBrushSize(newSize); // ถ้าคุณต้องการให้ส่วน UI แสดงค่า brush size ที่ถูกเปลี่ยน\n  };\n\n  const startDrawing = ({\n    nativeEvent\n  }) => {\n    if (historyIndex !== history.length - 1) {\n      setHistory(history.slice(0, historyIndex + 1));\n    }\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    setIsDrawing(true);\n    nativeEvent.preventDefault();\n  };\n  const draw = ({\n    nativeEvent\n  }) => {\n    if (!isDrawing) {\n      return;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    nativeEvent.preventDefault();\n  };\n  const stopDrawing = () => {\n    if (isDrawing) {\n      setHistory([...history, canvasRef.current.toDataURL()]);\n      setHistoryIndex(history.length);\n    }\n    setIsDrawing(false);\n  };\n  const setToDraw = () => {\n    contextRef.current.globalCompositeOperation = \"source-over\";\n  };\n  const setToErase = () => {\n    contextRef.current.globalCompositeOperation = \"destination-out\";\n  };\n  const saveImageToLocal = () => {\n    const image = canvasRef.current.toDataURL(\"image/png\");\n    const link = document.createElement(\"a\");\n    link.href = image;\n    link.download = \"canvas.png\";\n    link.click();\n  };\n  const handleFile = event => {\n    setFile(event.target.files[0]);\n  };\n  const setImageAndDraw = img => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    const maxWidth = window.innerWidth - 20;\n    const maxHeight = window.innerHeight - 240;\n    const width = img.width;\n    const height = img.height;\n    if (width > maxWidth || height > maxHeight) {\n      const ratio = Math.min(maxWidth / width, maxHeight / height);\n      img.width = width * ratio;\n      img.height = height * ratio;\n    }\n    canvas.width = img.width;\n    canvas.height = img.height;\n    context.drawImage(img, 0, 0, img.width, img.height);\n    context.lineCap = \"round\";\n    context.lineJoin = \"round\";\n    context.lineWidth = brushSize;\n    context.strokeStyle = brushColor;\n    setImageDimensions({\n      width: img.width,\n      height: img.height\n    });\n    setFile(null);\n    const canvasDataUrl = canvas.toDataURL(\"image/jpeg\");\n  };\n  const drawImageOnCanvas = () => {\n    const canvas = canvasRef.current;\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const img = new Image();\n        setOriginalImage(img);\n        img.onload = () => {\n          setImageAndDraw(img);\n        };\n        img.src = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    setHistory([]);\n    setHistoryIndex(-1);\n    setCanDownLoad(false);\n    setOriginalImage(null);\n    setImageApi(null);\n  };\n  const undo = () => handleHistoryChange(historyIndex - 1);\n  const redo = () => handleHistoryChange(historyIndex + 1);\n  const handleHistoryChange = newIndex => {\n    if (newIndex >= 0 && newIndex < history.length) {\n      setHistoryIndex(newIndex);\n      const img = new Image();\n      img.src = history[newIndex];\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.drawImage(img, 0, 0);\n      };\n    }\n  };\n  const sendPicWish = async () => {\n    try {\n      console.log(\"Processing...\");\n      setLoading(true);\n      const apiUrl = \"https://techhk.aoscdn.com/api/tasks/visual/inpaint\";\n      const apiKey = \"wxyznv7d50lto1556\";\n      if (!originalImage && !imageApi) {\n        setLoading(false);\n        alert(\"Please upload an image before processing.\");\n        return;\n      }\n      const sourceImage = imageApi ? imageApi : originalImage;\n      const maxWidth = window.innerWidth - 20;\n      const maxHeight = window.innerHeight - 240;\n      let {\n        width,\n        height\n      } = sourceImage;\n      if (width > maxWidth || height > maxHeight) {\n        const ratio = Math.min(maxWidth / width, maxHeight / height);\n        width *= ratio;\n        height *= ratio;\n      }\n      const canvas = document.createElement(\"canvas\");\n      const context = canvas.getContext(\"2d\");\n      canvas.width = width;\n      canvas.height = height;\n      context.drawImage(sourceImage, 0, 0, width, height);\n      const blob = await new Promise(resolve => {\n        canvas.toBlob(resolve, \"image/jpeg\");\n      });\n      const imageFile = new File([blob], \"image.jpg\");\n      console.log(\"file\", imageFile);\n      const changCanvas = canvasRef.current;\n      const changContext = changCanvas.getContext(\"2d\");\n      const imageData = changContext.getImageData(0, 0, changCanvas.width, changCanvas.height);\n      const data = imageData.data;\n      for (let i = 0; i < data.length; i += 4) {\n        const red = data[i];\n        const green = data[i + 1];\n        const blue = data[i + 2];\n        if (red === 255 && green === 199 && blue === 122) {\n          data[i] = 255;\n          data[i + 1] = 255;\n          data[i + 2] = 255;\n          data[i + 3] = 255;\n        } else {\n          data[i] = 0;\n          data[i + 1] = 0;\n          data[i + 2] = 0;\n          data[i + 3] = 255;\n        }\n      }\n      const maskCanvas = document.createElement(\"canvas\");\n      const maskContext = maskCanvas.getContext(\"2d\");\n      maskCanvas.width = changCanvas.width;\n      maskCanvas.height = changCanvas.height;\n      maskContext.putImageData(imageData, 0, 0);\n      const maskBlob = await new Promise(resolve => {\n        maskCanvas.toBlob(resolve, \"image/jpeg\");\n      });\n      const maskFile = new File([maskBlob], \"mask.jpg\");\n      console.log(\"mask\", maskFile);\n      const formData = new FormData();\n      formData.append(\"sync\", \"1\");\n      formData.append(\"image_file\", imageFile);\n      formData.append(\"mask_file\", maskFile);\n      const response = await fetch(apiUrl, {\n        method: \"POST\",\n        headers: {\n          \"X-API-KEY\": apiKey\n        },\n        body: formData\n      });\n      if (response.ok) {\n        setLoading(false);\n        const data = await response.json();\n        console.log(data);\n        const imageUrl = data.data.image;\n        if (imageUrl) {\n          const img = new Image();\n          img.crossOrigin = \"Anonymous\";\n          img.onload = () => {\n            setImageAndDraw(img);\n            setImageApi(img);\n            setCanDownLoad(true);\n          };\n          img.src = imageUrl;\n        } else {\n          console.error(\"No image URL found in the API response.\");\n        }\n      } else {\n        throw new Error(\"An error occurred while sending the image.\");\n      }\n    } catch (error) {\n      setLoading(false);\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"head\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-image\",\n      onClick: () => fileInputRef.current.click(),\n      children: /*#__PURE__*/_jsxDEV(CiImageOn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleFile,\n      multiple: false,\n      ref: fileInputRef,\n      type: \"file\",\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 5\n      },\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 26\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"canvas-container\",\n        ref: canvasRef,\n        onMouseDown: startDrawing,\n        onMouseMove: draw,\n        onMouseUp: stopDrawing,\n        onMouseLeave: stopDrawing,\n        style: {\n          maxWidth: \"100%\",\n          maxHeight: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"20\",\n          max: \"200\",\n          value: brushSize,\n          className: \"size\",\n          onChange: handleBrushSizeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonEraser\",\n        onClick: sendPicWish,\n        children: \"PicWish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button icon\",\n        onClick: undo,\n        children: /*#__PURE__*/_jsxDEV(HiArrowUturnLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button icon\",\n        onClick: redo,\n        children: /*#__PURE__*/_jsxDEV(HiArrowUturnRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        onClick: clearCanvas,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `button icon ${canDownload ? '' : 'disabled'}`,\n        id: \"download_image_link\",\n        onClick: canDownload ? saveImageToLocal : null,\n        download: \"canvas.png\",\n        children: /*#__PURE__*/_jsxDEV(AiOutlineDownload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawRectangle, \"UmIfD+ITtVyLu+79gSKkK+a6pAw=\");\n_c = DrawRectangle;\nexport default DrawRectangle;\nvar _c;\n$RefreshReg$(_c, \"DrawRectangle\");","map":{"version":3,"names":["React","useEffect","useRef","useState","HiArrowUturnRight","HiArrowUturnLeft","AiOutlineDownload","CiImageOn","Loading","jsxDEV","_jsxDEV","DrawRectangle","_s","brushSize","setBrushSize","brushColor","setBrushColor","currentBrushSize","canvasRef","contextRef","isDrawing","setIsDrawing","file","setFile","imageDimensions","setImageDimensions","width","height","history","setHistory","historyIndex","setHistoryIndex","imageApi","setImageApi","originalImage","setOriginalImage","fileInputRef","isLoading","setLoading","canDownload","setCanDownLoad","setupCanvas","drawImageOnCanvas","canvas","current","currentSize","lineWidth","context","getContext","lineCap","lineJoin","strokeStyle","handleBrushSizeChange","event","newSize","parseInt","target","value","startDrawing","nativeEvent","length","slice","offsetX","offsetY","beginPath","moveTo","lineTo","stroke","preventDefault","draw","stopDrawing","toDataURL","setToDraw","globalCompositeOperation","setToErase","saveImageToLocal","image","link","document","createElement","href","download","click","handleFile","files","setImageAndDraw","img","maxWidth","window","innerWidth","maxHeight","innerHeight","ratio","Math","min","drawImage","canvasDataUrl","reader","FileReader","onload","e","Image","src","result","readAsDataURL","clearCanvas","clearRect","undo","handleHistoryChange","redo","newIndex","sendPicWish","console","log","apiUrl","apiKey","alert","sourceImage","blob","Promise","resolve","toBlob","imageFile","File","changCanvas","changContext","imageData","getImageData","data","i","red","green","blue","maskCanvas","maskContext","putImageData","maskBlob","maskFile","formData","FormData","append","response","fetch","method","headers","body","ok","json","imageUrl","crossOrigin","error","Error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","multiple","ref","type","hidden","style","padding","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","max","id","_c","$RefreshReg$"],"sources":["C:/EraserImage/amonnatt_image-project/undo/image-project/src/components/DrawRectangle/DrawRectangle.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./DrawRectangle.css\"\r\nimport { HiArrowUturnRight , HiArrowUturnLeft } from \"react-icons/hi2\";\r\nimport { AiOutlineDownload } from \"react-icons/ai\"\r\nimport { CiImageOn } from \"react-icons/ci\"\r\nimport Loading from \"../Loading/Loading\";\r\n\r\nconst DrawRectangle = () => {\r\n  const [brushSize, setBrushSize] = useState(20);\r\n  const [brushColor, setBrushColor] = useState(\"rgba(255, 199, 122)\");\r\n  const currentBrushSize = useRef(20); // ตั้งค่าเริ่มต้นเป็น 20 หรือค่าเริ่มต้นที่คุณต้องการ\r\n\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [imageDimensions, setImageDimensions] = useState({ width: 0, height: 0 });\r\n  const [history, setHistory] = useState([]);\r\n  const [historyIndex, setHistoryIndex] = useState(-1);\r\n  const [imageApi, setImageApi] = useState(null);\r\n  const [originalImage, setOriginalImage] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [canDownload, setCanDownLoad] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    setupCanvas();\r\n  }, [brushSize, brushColor]);\r\n\r\n  useEffect(() => {\r\n    drawImageOnCanvas();\r\n  }, [file]);\r\n\r\n  const setupCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    const currentSize = currentBrushSize.current; // เก็บค่า currentBrushSize.current เพื่อให้ไม่รีเฟรช Canvas ทุกครั้ง\r\n    if (canvas.width !== 500 || canvas.height !== 500 || contextRef.current.lineWidth !== currentSize) {\r\n      canvas.width = 500;\r\n      canvas.height = 500;\r\n      const context = canvas.getContext(\"2d\");\r\n      context.lineCap = \"round\";\r\n      context.lineJoin = \"round\";\r\n      context.strokeStyle = \"black\";\r\n      context.lineWidth = currentSize;\r\n      context.strokeStyle = brushColor;\r\n      contextRef.current = context;\r\n    }\r\n  };\r\n\r\n  const handleBrushSizeChange = (event) => {\r\n    const newSize = parseInt(event.target.value);\r\n    currentBrushSize.current = newSize;\r\n    setBrushSize(newSize); // ถ้าคุณต้องการให้ส่วน UI แสดงค่า brush size ที่ถูกเปลี่ยน\r\n  };\r\n\r\n\r\n  const startDrawing = ({ nativeEvent }) => {\r\n    if (historyIndex !== history.length - 1) {\r\n      setHistory(history.slice(0, historyIndex + 1));\r\n    }\r\n\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(offsetX, offsetY);\r\n    contextRef.current.lineTo(offsetX, offsetY);\r\n    contextRef.current.stroke();\r\n    setIsDrawing(true);\r\n    nativeEvent.preventDefault();\r\n  };\r\n\r\n  const draw = ({ nativeEvent }) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    contextRef.current.lineTo(offsetX, offsetY);\r\n    contextRef.current.stroke();\r\n    nativeEvent.preventDefault();\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    if (isDrawing) {\r\n      setHistory([...history, canvasRef.current.toDataURL()]);\r\n      setHistoryIndex(history.length);\r\n    }\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const setToDraw = () => {\r\n    contextRef.current.globalCompositeOperation = \"source-over\";\r\n  };\r\n\r\n  const setToErase = () => {\r\n    contextRef.current.globalCompositeOperation = \"destination-out\";\r\n  };\r\n\r\n  const saveImageToLocal = () => {\r\n    const image = canvasRef.current.toDataURL(\"image/png\");\r\n    const link = document.createElement(\"a\");\r\n    link.href = image;\r\n    link.download = \"canvas.png\";\r\n    link.click();\r\n  };\r\n  \r\n  const handleFile = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const setImageAndDraw = (img) => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    const maxWidth = window.innerWidth - 20;\r\n    const maxHeight = window.innerHeight - 240;\r\n    const width = img.width;\r\n    const height = img.height;\r\n\r\n    if (width > maxWidth || height > maxHeight) {\r\n      const ratio = Math.min(maxWidth / width, maxHeight / height);\r\n      img.width = width * ratio;\r\n      img.height = height * ratio;\r\n    }\r\n\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    context.drawImage(img, 0, 0, img.width, img.height);\r\n    context.lineCap = \"round\";\r\n    context.lineJoin = \"round\";\r\n    context.lineWidth = brushSize;\r\n    context.strokeStyle = brushColor;\r\n    setImageDimensions({ width: img.width, height: img.height });\r\n    setFile(null);\r\n\r\n    const canvasDataUrl = canvas.toDataURL(\"image/jpeg\");\r\n  };\r\n\r\n  const drawImageOnCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (e) => {\r\n        const img = new Image();\r\n        setOriginalImage(img);\r\n\r\n        img.onload = () => {\r\n          setImageAndDraw(img);\r\n        };\r\n\r\n        img.src = e.target.result;\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    setHistory([]);\r\n    setHistoryIndex(-1);\r\n    setCanDownLoad(false);\r\n    setOriginalImage(null);\r\n    setImageApi(null);\r\n  };\r\n  \r\n  const undo = () => handleHistoryChange(historyIndex - 1);\r\n  const redo = () => handleHistoryChange(historyIndex + 1);\r\n  \r\n  const handleHistoryChange = (newIndex) => {\r\n    if (newIndex >= 0 && newIndex < history.length) {\r\n      setHistoryIndex(newIndex);\r\n      const img = new Image();\r\n      img.src = history[newIndex];\r\n      img.onload = () => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        context.drawImage(img, 0, 0);\r\n      };\r\n    }\r\n  };\r\n  \r\n\r\n  const sendPicWish = async () => {\r\n    try {\r\n      console.log(\"Processing...\");\r\n      setLoading(true);\r\n      const apiUrl = \"https://techhk.aoscdn.com/api/tasks/visual/inpaint\";\r\n      const apiKey = \"wxyznv7d50lto1556\";\r\n  \r\n      if (!originalImage && !imageApi) {\r\n        setLoading(false);\r\n        alert(\"Please upload an image before processing.\");\r\n        return;\r\n      }\r\n  \r\n      const sourceImage = imageApi ? imageApi : originalImage;\r\n      const maxWidth = window.innerWidth - 20;\r\n      const maxHeight = window.innerHeight - 240;\r\n      let { width, height } = sourceImage;\r\n\r\n      if (width > maxWidth || height > maxHeight) {\r\n        const ratio = Math.min(maxWidth / width, maxHeight / height);\r\n        width *= ratio;\r\n        height *= ratio;\r\n      }\r\n\r\n      const canvas = document.createElement(\"canvas\");\r\n      const context = canvas.getContext(\"2d\");\r\n\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      context.drawImage(sourceImage, 0, 0, width, height);\r\n\r\n      const blob = await new Promise((resolve) => {\r\n        canvas.toBlob(resolve, \"image/jpeg\");\r\n      });\r\n\r\n      const imageFile = new File([blob], \"image.jpg\");\r\n      console.log(\"file\", imageFile);\r\n  \r\n        \r\n      const changCanvas = canvasRef.current;\r\n      const changContext = changCanvas.getContext(\"2d\");\r\n      const imageData = changContext.getImageData(0, 0, changCanvas.width, changCanvas.height);\r\n      const data = imageData.data;\r\n  \r\n      for (let i = 0; i < data.length; i += 4) {\r\n        const red = data[i];\r\n        const green = data[i + 1];\r\n        const blue = data[i + 2];\r\n  \r\n        if (red === 255 && green === 199 && blue === 122) {\r\n          data[i] = 255;\r\n          data[i + 1] = 255;\r\n          data[i + 2] = 255;\r\n          data[i + 3] = 255;\r\n        } else {\r\n          data[i] = 0;\r\n          data[i + 1] = 0;\r\n          data[i + 2] = 0;\r\n          data[i + 3] = 255;\r\n        }\r\n      }\r\n  \r\n      const maskCanvas = document.createElement(\"canvas\");\r\n      const maskContext = maskCanvas.getContext(\"2d\");\r\n      maskCanvas.width = changCanvas.width;\r\n      maskCanvas.height = changCanvas.height;\r\n      maskContext.putImageData(imageData, 0, 0);\r\n  \r\n  \r\n      const maskBlob = await new Promise((resolve) => {\r\n        maskCanvas.toBlob(resolve, \"image/jpeg\");\r\n      });\r\n      const maskFile = new File([maskBlob], \"mask.jpg\");\r\n      console.log(\"mask\", maskFile);\r\n     \r\n  \r\n      const formData = new FormData();\r\n      formData.append(\"sync\", \"1\");\r\n      formData.append(\"image_file\", imageFile);\r\n      formData.append(\"mask_file\", maskFile);\r\n  \r\n      const response = await fetch(apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n        body: formData,\r\n      });\r\n  \r\n      if (response.ok) {\r\n        setLoading(false);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        const imageUrl = data.data.image;\r\n  \r\n        if (imageUrl) {\r\n          const img = new Image();\r\n          img.crossOrigin = \"Anonymous\";\r\n          img.onload = () => {\r\n            setImageAndDraw(img);\r\n            setImageApi(img);\r\n            setCanDownLoad(true);\r\n          };\r\n          img.src = imageUrl;\r\n        } else {\r\n          console.error(\"No image URL found in the API response.\");\r\n        }\r\n      } else {\r\n        throw new Error(\"An error occurred while sending the image.\");\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"head\">\r\n      <div  className=\"icon-image\" onClick={()=>fileInputRef.current.click()}>\r\n            <CiImageOn />\r\n          </div>\r\n          <input onChange={handleFile} multiple={false} ref={fileInputRef} type='file'hidden/>\r\n\r\n          <div style={{ padding: 5 }}>\r\n            {isLoading ? <Loading /> : null}\r\n            <canvas\r\n              className=\"canvas-container\"\r\n              ref={canvasRef}\r\n              onMouseDown={startDrawing}\r\n              onMouseMove={draw}\r\n              onMouseUp={stopDrawing}\r\n              onMouseLeave={stopDrawing}\r\n              style={{\r\n                maxWidth: \"100%\",\r\n                maxHeight: \"100%\",\r\n              }}\r\n            />\r\n          </div>\r\n      \r\n      <div className=\"menuBar\">\r\n        <div>\r\n          <input type=\"range\" min=\"20\" max=\"200\" value={brushSize} className=\"size\" onChange={handleBrushSizeChange}/>\r\n        </div>\r\n        <div className=\"buttonEraser\" onClick={sendPicWish}>\r\n          PicWish\r\n        </div>\r\n        <div className=\"button icon\" onClick={undo}>\r\n          <HiArrowUturnLeft />\r\n        </div>\r\n        <div className=\"button icon\" onClick={redo}>\r\n          <HiArrowUturnRight />\r\n        </div>\r\n        <div className=\"button\" onClick={clearCanvas}>\r\n          Clear\r\n        </div>\r\n        <div\r\n          className={`button icon ${canDownload ? '' : 'disabled'}`}\r\n          id=\"download_image_link\"\r\n          onClick={canDownload ? saveImageToLocal : null}\r\n          download=\"canvas.png\"\r\n        >\r\n          <AiOutlineDownload />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawRectangle;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}