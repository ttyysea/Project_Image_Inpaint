{"ast":null,"code":"var _jsxFileName = \"C:\\\\EraserImage\\\\amonnatt_image-project\\\\undo\\\\image-project\\\\src\\\\components\\\\DrawRectangle\\\\DrawRectangle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./DrawRectangle.css\";\nimport { HiArrowUturnRight, HiArrowUturnLeft } from \"react-icons/hi2\";\nimport { AiOutlineDownload, AiOutlineZoomIn, AiOutlineZoomOut } from \"react-icons/ai\";\nimport { CiImageOn } from \"react-icons/ci\";\nimport Loading from \"../Loading/Loading\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawRectangle = () => {\n  _s();\n  const [brushSize, setBrushSize] = useState(50);\n  const [brushColor, setBrushColor] = useState(\"rgba(255, 199, 122)\");\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [file, setFile] = useState();\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [imageApi, setImageApi] = useState(null);\n  const [originalImage, setOriginalImage] = useState(null);\n  const fileInputRef = useRef(null);\n  const [isLoading, setLoading] = useState(false);\n  const [canDownload, setCanDownload] = useState(false);\n  const SCROLL_SENSITIVITY = 0.0005;\n  const MAX_ZOOM = 10;\n  const MIN_ZOOM = 0.3;\n  const [zoom, setZoom] = useState(0.4);\n  const [draggind, setDragging] = useState(false);\n  const containerRef = useRef(null);\n  const clamp = (num, min, max) => Math.min(Math.max(num, min), max);\n  useEffect(() => {\n    setupCanvas();\n  }, []);\n  useEffect(() => {\n    drawImageOnCanvas();\n  }, [file]);\n  const setupCanvas = () => {\n    const canvas = canvasRef.current;\n    canvas.width = 500;\n    canvas.height = 500;\n    const context = canvas.getContext(\"2d\");\n    context.lineCap = \"round\";\n    context.lineJoin = \"round\";\n    context.lineWidth = 50;\n    context.strokeStyle = brushColor;\n    contextRef.current = context;\n  };\n  const startDrawing = ({\n    nativeEvent\n  }) => {\n    if (historyIndex !== history.length - 1) {\n      setHistory(history.slice(0, historyIndex + 1));\n    }\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    setIsDrawing(true);\n    nativeEvent.preventDefault();\n  };\n  const draw = ({\n    nativeEvent\n  }) => {\n    if (!isDrawing) {\n      return;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    nativeEvent.preventDefault();\n  };\n  const stopDrawing = () => {\n    if (isDrawing) {\n      setHistory([...history, canvasRef.current.toDataURL()]);\n      setHistoryIndex(history.length);\n    }\n    setIsDrawing(false);\n  };\n  const handleBrushSizeChange = event => {\n    const newSize = parseInt(event.target.value);\n    setBrushSize(newSize);\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.lineWidth = newSize;\n  };\n  const saveImageToLocal = () => {\n    const image = canvasRef.current.toDataURL(\"image/png\");\n    const link = document.createElement(\"a\");\n    link.href = image;\n    link.download = \"canvas.png\";\n    link.click();\n  };\n  const handleFile = event => {\n    setFile(event.target.files[0]);\n  };\n  const setImageAndDraw = img => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    canvas.width = img.naturalWidth;\n    canvas.height = img.naturalHeight;\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    setHistory([canvas.toDataURL()]);\n    setHistoryIndex(0);\n    context.lineCap = \"round\";\n    context.lineJoin = \"round\";\n    context.lineWidth = 50;\n    context.strokeStyle = brushColor;\n    setFile(null);\n  };\n  const drawImageOnCanvas = () => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const img = new Image();\n        setOriginalImage(img);\n        img.onload = () => {\n          setImageAndDraw(img);\n        };\n        img.src = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const undo = () => handleHistoryChange(historyIndex - 1);\n  const redo = () => handleHistoryChange(historyIndex + 1);\n  const handleHistoryChange = newIndex => {\n    if (newIndex >= 0 && newIndex < history.length) {\n      setHistoryIndex(newIndex);\n      const img = new Image();\n      img.src = history[newIndex];\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.drawImage(img, 0, 0);\n      };\n    }\n  };\n  const sendPicWish = async () => {\n    try {\n      console.log(\"Processing...\");\n      setLoading(true);\n      if (!originalImage && !imageApi) {\n        setLoading(false);\n        console(\"Please upload an image before processing.\");\n        alert(\"Please upload an image before processing.\");\n        return;\n      }\n      const sourceImage = imageApi || originalImage;\n      const canvas = document.createElement(\"canvas\");\n      const context = canvas.getContext(\"2d\");\n      canvas.width = sourceImage.width;\n      canvas.height = sourceImage.height;\n      context.drawImage(sourceImage, 0, 0);\n      const blob = await new Promise(resolve => {\n        canvas.toBlob(resolve, \"image/jpeg\");\n      });\n      const imageFile = new File([blob], \"image.jpg\");\n      const fileURI = canvas.toDataURL(\"image/jpeg\");\n      console.log(\"file\", imageFile);\n      console.log(\"file uri\", fileURI);\n      const changCanvas = canvasRef.current;\n      const changContext = changCanvas.getContext(\"2d\");\n      const imageData = changContext.getImageData(0, 0, changCanvas.width, changCanvas.height);\n      const data = imageData.data;\n      for (let i = 0; i < data.length; i += 4) {\n        const red = data[i];\n        const green = data[i + 1];\n        const blue = data[i + 2];\n        if (red === 255 && green === 199 && blue === 122) {\n          data[i] = 255;\n          data[i + 1] = 255;\n          data[i + 2] = 255;\n          data[i + 3] = 255;\n        } else {\n          data[i] = 0;\n          data[i + 1] = 0;\n          data[i + 2] = 0;\n          data[i + 3] = 255;\n        }\n      }\n      const maskCanvas = document.createElement(\"canvas\");\n      const maskContext = maskCanvas.getContext(\"2d\");\n      maskCanvas.width = changCanvas.width;\n      maskCanvas.height = changCanvas.height;\n      maskContext.putImageData(imageData, 0, 0);\n      const maskBlob = await new Promise(resolve => {\n        maskCanvas.toBlob(resolve, \"image/jpeg\");\n      });\n      const maskFile = new File([maskBlob], \"mask.jpg\");\n      const maskURI = maskCanvas.toDataURL(\"image/jpeg\");\n      console.log(\"mask\", maskFile);\n      console.log(\"mask uri\", maskURI);\n      const formData = new FormData();\n      formData.append(\"sync\", \"1\");\n      formData.append(\"image_file\", imageFile);\n      formData.append(\"mask_file\", maskFile);\n      const serverUrl = 'http://localhost:5000/processImage';\n      const response = await fetch(serverUrl, {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        setLoading(false);\n        const data = await response.json();\n        console.log(data);\n        const imageUrl = data.data.image;\n        if (imageUrl) {\n          const img = new Image();\n          img.crossOrigin = \"Anonymous\";\n          img.onload = () => {\n            setImageAndDraw(img);\n            setImageApi(img);\n            setCanDownload(true);\n          };\n          img.src = imageUrl;\n          toast.success(\"Success.\");\n        } else {\n          console.error(\"No image URL found in the API response.\");\n          toast.error(\"No image URL found in the API response.\");\n        }\n      } else {\n        alert(\"An error occurred while sending the image.\");\n        throw new Error(\"An error occurred while sending the image.\");\n      }\n    } catch (error) {\n      setLoading(false);\n      alert(\"Server Error\");\n      console.error(error);\n    }\n  };\n  const handleWheel = event => {\n    event.preventDefault();\n    const {\n      deltaY\n    } = event;\n    if (!draggind) {\n      setZoom(zoom => clamp(zoom + deltaY * SCROLL_SENSITIVITY * -1, MIN_ZOOM, MAX_ZOOM));\n    }\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.addEventListener('wheel', handleWheel);\n    return () => {\n      canvas.removeEventListener('wheel', handleWheel);\n    };\n  }, [handleWheel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"head\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-image\",\n      onClick: () => fileInputRef.current.click(),\n      children: /*#__PURE__*/_jsxDEV(CiImageOn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleFile,\n      multiple: false,\n      ref: fileInputRef,\n      type: \"file\",\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `canvas-container ${isLoading ? 'loading' : ''}`,\n      ref: containerRef,\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 22\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        onMouseDown: startDrawing,\n        onMouseMove: draw,\n        onMouseUp: stopDrawing,\n        onMouseLeave: stopDrawing,\n        style: {\n          transform: `scale(${zoom})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brushClass\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"150\",\n          value: brushSize,\n          className: \"range\",\n          onChange: handleBrushSizeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonEraser\",\n        onClick: sendPicWish,\n        children: \"Erase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button icon\",\n        onClick: undo,\n        children: /*#__PURE__*/_jsxDEV(HiArrowUturnLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button icon\",\n        onClick: redo,\n        children: /*#__PURE__*/_jsxDEV(HiArrowUturnRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `button icon ${canDownload ? \"\" : \"disabled\"}`,\n        id: \"download_image_link\",\n        onClick: canDownload ? saveImageToLocal : null,\n        download: \"canvas.png\",\n        children: /*#__PURE__*/_jsxDEV(AiOutlineDownload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawRectangle, \"Xf4NQOvHSTmBjuTxCr8rm4L3NaQ=\");\n_c = DrawRectangle;\nexport default DrawRectangle;\nvar _c;\n$RefreshReg$(_c, \"DrawRectangle\");","map":{"version":3,"names":["React","useEffect","useRef","useState","HiArrowUturnRight","HiArrowUturnLeft","AiOutlineDownload","AiOutlineZoomIn","AiOutlineZoomOut","CiImageOn","Loading","toast","jsxDEV","_jsxDEV","DrawRectangle","_s","brushSize","setBrushSize","brushColor","setBrushColor","canvasRef","contextRef","isDrawing","setIsDrawing","file","setFile","history","setHistory","historyIndex","setHistoryIndex","imageApi","setImageApi","originalImage","setOriginalImage","fileInputRef","isLoading","setLoading","canDownload","setCanDownload","SCROLL_SENSITIVITY","MAX_ZOOM","MIN_ZOOM","zoom","setZoom","draggind","setDragging","containerRef","clamp","num","min","max","Math","setupCanvas","drawImageOnCanvas","canvas","current","width","height","context","getContext","lineCap","lineJoin","lineWidth","strokeStyle","startDrawing","nativeEvent","length","slice","offsetX","offsetY","beginPath","moveTo","lineTo","stroke","preventDefault","draw","stopDrawing","toDataURL","handleBrushSizeChange","event","newSize","parseInt","target","value","saveImageToLocal","image","link","document","createElement","href","download","click","handleFile","files","setImageAndDraw","img","naturalWidth","naturalHeight","drawImage","reader","FileReader","onload","e","Image","src","result","readAsDataURL","undo","handleHistoryChange","redo","newIndex","clearRect","sendPicWish","console","log","alert","sourceImage","blob","Promise","resolve","toBlob","imageFile","File","fileURI","changCanvas","changContext","imageData","getImageData","data","i","red","green","blue","maskCanvas","maskContext","putImageData","maskBlob","maskFile","maskURI","formData","FormData","append","serverUrl","response","fetch","method","body","ok","json","imageUrl","crossOrigin","success","error","Error","handleWheel","deltaY","addEventListener","removeEventListener","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","multiple","ref","type","hidden","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","style","transform","id","_c","$RefreshReg$"],"sources":["C:/EraserImage/amonnatt_image-project/undo/image-project/src/components/DrawRectangle/DrawRectangle.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./DrawRectangle.css\";\r\nimport { HiArrowUturnRight, HiArrowUturnLeft } from \"react-icons/hi2\";\r\nimport { AiOutlineDownload,AiOutlineZoomIn,AiOutlineZoomOut } from \"react-icons/ai\";\r\nimport { CiImageOn } from \"react-icons/ci\";\r\nimport Loading from \"../Loading/Loading\";\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nconst DrawRectangle = () => {\r\n  const [brushSize, setBrushSize] = useState(50);\r\n  const [brushColor, setBrushColor] = useState(\"rgba(255, 199, 122)\");\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [history, setHistory] = useState([]);\r\n  const [historyIndex, setHistoryIndex] = useState(-1);\r\n  const [imageApi, setImageApi] = useState(null);\r\n  const [originalImage, setOriginalImage] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [canDownload, setCanDownload] = useState(false);\r\n  const SCROLL_SENSITIVITY = 0.0005;\r\n  const MAX_ZOOM = 10;\r\n  const MIN_ZOOM = 0.3;\r\n  const [zoom, setZoom] = useState(0.4);\r\n  const [draggind, setDragging] = useState(false);\r\n  const containerRef = useRef(null);\r\n  const clamp = (num, min, max) => Math.min(Math.max(num, min), max);\r\n\r\n  useEffect(() => {\r\n    setupCanvas();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    drawImageOnCanvas();\r\n  }, [file]);\r\n\r\n  const setupCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = 500;\r\n    canvas.height = 500;\r\n    const context = canvas.getContext(\"2d\");\r\n    context.lineCap = \"round\";\r\n    context.lineJoin = \"round\";\r\n    context.lineWidth = 50;\r\n    context.strokeStyle = brushColor;\r\n    contextRef.current = context;\r\n  };\r\n\r\n  const startDrawing = ({ nativeEvent }) => {\r\n    if (historyIndex !== history.length - 1) {\r\n      setHistory(history.slice(0, historyIndex + 1));\r\n    }\r\n\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(offsetX, offsetY);\r\n    contextRef.current.lineTo(offsetX, offsetY);\r\n    contextRef.current.stroke();\r\n    setIsDrawing(true);\r\n    nativeEvent.preventDefault();\r\n  };\r\n\r\n  const draw = ({ nativeEvent }) => {\r\n    if (!isDrawing ) {\r\n      return;\r\n    }\r\n\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    contextRef.current.lineTo(offsetX, offsetY);\r\n    contextRef.current.stroke();\r\n    nativeEvent.preventDefault();\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    if (isDrawing) {\r\n      setHistory([...history, canvasRef.current.toDataURL()]);\r\n      setHistoryIndex(history.length);\r\n    }\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const handleBrushSizeChange = (event) => {\r\n    const newSize = parseInt(event.target.value);\r\n    setBrushSize(newSize);\r\n  \r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    context.lineWidth = newSize;\r\n  };\r\n\r\n  const saveImageToLocal = () => {\r\n    const image = canvasRef.current.toDataURL(\"image/png\");\r\n    const link = document.createElement(\"a\");\r\n    link.href = image;\r\n    link.download = \"canvas.png\";\r\n    link.click();\r\n  };\r\n\r\n  const handleFile = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const setImageAndDraw = (img) => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    canvas.width = img.naturalWidth\r\n    canvas.height = img.naturalHeight\r\n    context.drawImage(img, 0, 0 , canvas.width, canvas.height);\r\n\r\n    setHistory([canvas.toDataURL()]); \r\n    setHistoryIndex(0); \r\n    context.lineCap = \"round\";\r\n    context.lineJoin = \"round\";\r\n    context.lineWidth = 50;\r\n    context.strokeStyle = brushColor;\r\n    setFile(null);\r\n  };\r\n\r\n\r\n  const drawImageOnCanvas = () => {\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (e) => {\r\n        const img = new Image();\r\n        setOriginalImage(img);\r\n\r\n        img.onload = () => {\r\n          setImageAndDraw(img);\r\n        };\r\n\r\n        img.src = e.target.result;\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const undo = () => handleHistoryChange(historyIndex - 1);\r\n  const redo = () => handleHistoryChange(historyIndex + 1);\r\n\r\n  const handleHistoryChange = (newIndex) => {\r\n    if (newIndex >= 0 && newIndex < history.length) {\r\n      setHistoryIndex(newIndex);\r\n      const img = new Image();\r\n      img.src = history[newIndex];\r\n      img.onload = () => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        context.drawImage(img, 0, 0);\r\n      };\r\n    }\r\n  };\r\n\r\n  const sendPicWish = async () => {\r\n    try {\r\n      console.log(\"Processing...\");\r\n      setLoading(true);\r\n\r\n\r\n      if (!originalImage && !imageApi) {\r\n        setLoading(false);\r\n        console(\"Please upload an image before processing.\")\r\n        alert(\"Please upload an image before processing.\");\r\n        return;\r\n      }\r\n\r\n      const sourceImage = imageApi || originalImage;\r\n\r\n      const canvas = document.createElement(\"canvas\");\r\n      const context = canvas.getContext(\"2d\");\r\n\r\n      canvas.width = sourceImage.width;\r\n      canvas.height = sourceImage.height;\r\n\r\n      context.drawImage(sourceImage, 0, 0);\r\n\r\n      const blob = await new Promise((resolve) => {\r\n        canvas.toBlob(resolve, \"image/jpeg\");\r\n      });\r\n\r\n      const imageFile = new File([blob], \"image.jpg\");\r\n      const fileURI = canvas.toDataURL(\"image/jpeg\")\r\n      console.log(\"file\", imageFile);\r\n      console.log(\"file uri\", fileURI);\r\n\r\n      const changCanvas = canvasRef.current;\r\n      const changContext = changCanvas.getContext(\"2d\");\r\n      const imageData = changContext.getImageData(0, 0, changCanvas.width, changCanvas.height);\r\n      const data = imageData.data;\r\n\r\n      for (let i = 0; i < data.length; i += 4) {\r\n        const red = data[i];\r\n        const green = data[i + 1];\r\n        const blue = data[i + 2];\r\n\r\n        if (red === 255 && green === 199 && blue === 122) {\r\n          data[i] = 255;\r\n          data[i + 1] = 255;\r\n          data[i + 2] = 255;\r\n          data[i + 3] = 255;\r\n        } else {\r\n          data[i] = 0;\r\n          data[i + 1] = 0;\r\n          data[i + 2] = 0;\r\n          data[i + 3] = 255;\r\n        }\r\n      }\r\n\r\n      const maskCanvas = document.createElement(\"canvas\");\r\n      const maskContext = maskCanvas.getContext(\"2d\");\r\n      maskCanvas.width = changCanvas.width;\r\n      maskCanvas.height = changCanvas.height;\r\n      maskContext.putImageData(imageData, 0, 0);\r\n\r\n      const maskBlob = await new Promise((resolve) => {\r\n        maskCanvas.toBlob(resolve, \"image/jpeg\");\r\n      });\r\n      const maskFile = new File([maskBlob], \"mask.jpg\");\r\n      const maskURI = maskCanvas.toDataURL(\"image/jpeg\")\r\n      console.log(\"mask\", maskFile);\r\n      console.log(\"mask uri\", maskURI);\r\n      \r\n\r\n      const formData = new FormData();\r\n      formData.append(\"sync\", \"1\");\r\n      formData.append(\"image_file\", imageFile);\r\n      formData.append(\"mask_file\", maskFile);\r\n\r\n      const serverUrl = 'http://localhost:5000/processImage'; \r\n      const response = await fetch(serverUrl, {\r\n        method: 'POST',\r\n        body: formData,\r\n        \r\n      });\r\n\r\n      if (response.ok) {\r\n        setLoading(false);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        const imageUrl = data.data.image;\r\n\r\n        if (imageUrl) {\r\n          const img = new Image();\r\n          img.crossOrigin = \"Anonymous\";\r\n          img.onload = () => {\r\n            setImageAndDraw(img);\r\n            setImageApi(img);\r\n            setCanDownload(true);\r\n          };\r\n          img.src = imageUrl;\r\n          toast.success(\"Success.\")\r\n        } else {\r\n          console.error(\"No image URL found in the API response.\");\r\n          \r\n          toast.error(\"No image URL found in the API response.\")\r\n        }\r\n      } else {\r\n        alert(\"An error occurred while sending the image.\")\r\n        throw new Error(\"An error occurred while sending the image.\");\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      alert(\"Server Error\")\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleWheel = (event) => {\r\n    event.preventDefault();\r\n    const { deltaY } = event;\r\n    if (!draggind) {\r\n      setZoom((zoom) =>\r\n          clamp(zoom + deltaY * SCROLL_SENSITIVITY * -1, MIN_ZOOM, MAX_ZOOM)\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n      const canvas = canvasRef.current;\r\n      canvas.addEventListener('wheel', handleWheel);\r\n      return () => {\r\n          canvas.removeEventListener('wheel', handleWheel);\r\n      }\r\n  }, [handleWheel]);\r\n\r\n\r\n  return (\r\n    <div className=\"head\">\r\n      <div className=\"icon-image\" onClick={() => fileInputRef.current.click()}>\r\n        <CiImageOn />\r\n      </div>\r\n      <input onChange={handleFile} multiple={false} ref={fileInputRef} type=\"file\" hidden />\r\n\r\n      \r\n      <div  className={`canvas-container ${isLoading ? 'loading' : ''}`} ref={containerRef}>\r\n        {isLoading ? <Loading /> : null}\r\n        <canvas\r\n          ref={canvasRef}\r\n          onMouseDown={startDrawing}\r\n          onMouseMove={draw}\r\n          onMouseUp={stopDrawing}\r\n          onMouseLeave={stopDrawing}\r\n          style={{\r\n            transform: `scale(${zoom})`, \r\n          }}\r\n              \r\n        />\r\n      </div>\r\n      \r\n\r\n      <div className=\"menuBar\">\r\n        <div className=\"brushClass\">\r\n          {/* <p className=\"brushText\">Brush</p> */}\r\n          <input \r\n            type=\"range\" \r\n            min=\"10\" max=\"150\" \r\n            value={brushSize} \r\n            className=\"range\" \r\n            onChange={handleBrushSizeChange} \r\n          />\r\n        </div>\r\n        <div className=\"buttonEraser\" onClick={sendPicWish}>\r\n          Erase\r\n        </div>\r\n        <div className=\"button icon\" onClick={undo}>\r\n          <HiArrowUturnLeft />\r\n        </div>\r\n        <div className=\"button icon\" onClick={redo}>\r\n          <HiArrowUturnRight />\r\n        </div>\r\n        <div\r\n          className={`button icon ${canDownload ? \"\" : \"disabled\"}`}\r\n          id=\"download_image_link\"\r\n          onClick={canDownload ? saveImageToLocal : null}\r\n          download=\"canvas.png\"\r\n        >\r\n          <AiOutlineDownload />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawRectangle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,qBAAqB;AAC5B,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,iBAAiB;AACrE,SAASC,iBAAiB,EAACC,eAAe,EAACC,gBAAgB,QAAQ,gBAAgB;AACnF,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,OAAOC,OAAO,MAAM,oBAAoB;AAExC,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,qBAAqB,CAAC;EACnE,MAAMiB,SAAS,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMmB,UAAU,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM+B,YAAY,GAAGhC,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACiC,SAAS,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMoC,kBAAkB,GAAG,MAAM;EACjC,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,QAAQ,GAAG,GAAG;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxC,QAAQ,CAAC,GAAG,CAAC;EACrC,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM2C,YAAY,GAAG5C,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM6C,KAAK,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,IAAI,CAACF,GAAG,CAACE,IAAI,CAACD,GAAG,CAACF,GAAG,EAAEC,GAAG,CAAC,EAAEC,GAAG,CAAC;EAElEjD,SAAS,CAAC,MAAM;IACdmD,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENnD,SAAS,CAAC,MAAM;IACdoD,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAAC7B,IAAI,CAAC,CAAC;EAEV,MAAM4B,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAME,MAAM,GAAGlC,SAAS,CAACmC,OAAO;IAChCD,MAAM,CAACE,KAAK,GAAG,GAAG;IAClBF,MAAM,CAACG,MAAM,GAAG,GAAG;IACnB,MAAMC,OAAO,GAAGJ,MAAM,CAACK,UAAU,CAAC,IAAI,CAAC;IACvCD,OAAO,CAACE,OAAO,GAAG,OAAO;IACzBF,OAAO,CAACG,QAAQ,GAAG,OAAO;IAC1BH,OAAO,CAACI,SAAS,GAAG,EAAE;IACtBJ,OAAO,CAACK,WAAW,GAAG7C,UAAU;IAChCG,UAAU,CAACkC,OAAO,GAAGG,OAAO;EAC9B,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAC;IAAEC;EAAY,CAAC,KAAK;IACxC,IAAIrC,YAAY,KAAKF,OAAO,CAACwC,MAAM,GAAG,CAAC,EAAE;MACvCvC,UAAU,CAACD,OAAO,CAACyC,KAAK,CAAC,CAAC,EAAEvC,YAAY,GAAG,CAAC,CAAC,CAAC;IAChD;IAEA,MAAM;MAAEwC,OAAO;MAAEC;IAAQ,CAAC,GAAGJ,WAAW;IACxC5C,UAAU,CAACkC,OAAO,CAACe,SAAS,CAAC,CAAC;IAC9BjD,UAAU,CAACkC,OAAO,CAACgB,MAAM,CAACH,OAAO,EAAEC,OAAO,CAAC;IAC3ChD,UAAU,CAACkC,OAAO,CAACiB,MAAM,CAACJ,OAAO,EAAEC,OAAO,CAAC;IAC3ChD,UAAU,CAACkC,OAAO,CAACkB,MAAM,CAAC,CAAC;IAC3BlD,YAAY,CAAC,IAAI,CAAC;IAClB0C,WAAW,CAACS,cAAc,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,IAAI,GAAGA,CAAC;IAAEV;EAAY,CAAC,KAAK;IAChC,IAAI,CAAC3C,SAAS,EAAG;MACf;IACF;IAEA,MAAM;MAAE8C,OAAO;MAAEC;IAAQ,CAAC,GAAGJ,WAAW;IACxC5C,UAAU,CAACkC,OAAO,CAACiB,MAAM,CAACJ,OAAO,EAAEC,OAAO,CAAC;IAC3ChD,UAAU,CAACkC,OAAO,CAACkB,MAAM,CAAC,CAAC;IAC3BR,WAAW,CAACS,cAAc,CAAC,CAAC;EAC9B,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAItD,SAAS,EAAE;MACbK,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEN,SAAS,CAACmC,OAAO,CAACsB,SAAS,CAAC,CAAC,CAAC,CAAC;MACvDhD,eAAe,CAACH,OAAO,CAACwC,MAAM,CAAC;IACjC;IACA3C,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMuD,qBAAqB,GAAIC,KAAK,IAAK;IACvC,MAAMC,OAAO,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IAC5ClE,YAAY,CAAC+D,OAAO,CAAC;IAErB,MAAM1B,MAAM,GAAGlC,SAAS,CAACmC,OAAO;IAChC,MAAMG,OAAO,GAAGJ,MAAM,CAACK,UAAU,CAAC,IAAI,CAAC;IACvCD,OAAO,CAACI,SAAS,GAAGkB,OAAO;EAC7B,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,KAAK,GAAGjE,SAAS,CAACmC,OAAO,CAACsB,SAAS,CAAC,WAAW,CAAC;IACtD,MAAMS,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGJ,KAAK;IACjBC,IAAI,CAACI,QAAQ,GAAG,YAAY;IAC5BJ,IAAI,CAACK,KAAK,CAAC,CAAC;EACd,CAAC;EAED,MAAMC,UAAU,GAAIb,KAAK,IAAK;IAC5BtD,OAAO,CAACsD,KAAK,CAACG,MAAM,CAACW,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,eAAe,GAAIC,GAAG,IAAK;IAC/B,MAAMzC,MAAM,GAAGlC,SAAS,CAACmC,OAAO;IAChC,MAAMG,OAAO,GAAGJ,MAAM,CAACK,UAAU,CAAC,IAAI,CAAC;IAEvCL,MAAM,CAACE,KAAK,GAAGuC,GAAG,CAACC,YAAY;IAC/B1C,MAAM,CAACG,MAAM,GAAGsC,GAAG,CAACE,aAAa;IACjCvC,OAAO,CAACwC,SAAS,CAACH,GAAG,EAAE,CAAC,EAAE,CAAC,EAAGzC,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACG,MAAM,CAAC;IAE1D9B,UAAU,CAAC,CAAC2B,MAAM,CAACuB,SAAS,CAAC,CAAC,CAAC,CAAC;IAChChD,eAAe,CAAC,CAAC,CAAC;IAClB6B,OAAO,CAACE,OAAO,GAAG,OAAO;IACzBF,OAAO,CAACG,QAAQ,GAAG,OAAO;IAC1BH,OAAO,CAACI,SAAS,GAAG,EAAE;IACtBJ,OAAO,CAACK,WAAW,GAAG7C,UAAU;IAChCO,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAGD,MAAM4B,iBAAiB,GAAGA,CAAA,KAAM;IAE9B,IAAI7B,IAAI,EAAE;MACR,MAAM2E,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAE/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;QACrB,MAAMP,GAAG,GAAG,IAAIQ,KAAK,CAAC,CAAC;QACvBtE,gBAAgB,CAAC8D,GAAG,CAAC;QAErBA,GAAG,CAACM,MAAM,GAAG,MAAM;UACjBP,eAAe,CAACC,GAAG,CAAC;QACtB,CAAC;QAEDA,GAAG,CAACS,GAAG,GAAGF,CAAC,CAACpB,MAAM,CAACuB,MAAM;MAC3B,CAAC;MAEDN,MAAM,CAACO,aAAa,CAAClF,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,MAAMmF,IAAI,GAAGA,CAAA,KAAMC,mBAAmB,CAAChF,YAAY,GAAG,CAAC,CAAC;EACxD,MAAMiF,IAAI,GAAGA,CAAA,KAAMD,mBAAmB,CAAChF,YAAY,GAAG,CAAC,CAAC;EAExD,MAAMgF,mBAAmB,GAAIE,QAAQ,IAAK;IACxC,IAAIA,QAAQ,IAAI,CAAC,IAAIA,QAAQ,GAAGpF,OAAO,CAACwC,MAAM,EAAE;MAC9CrC,eAAe,CAACiF,QAAQ,CAAC;MACzB,MAAMf,GAAG,GAAG,IAAIQ,KAAK,CAAC,CAAC;MACvBR,GAAG,CAACS,GAAG,GAAG9E,OAAO,CAACoF,QAAQ,CAAC;MAC3Bf,GAAG,CAACM,MAAM,GAAG,MAAM;QACjB,MAAM/C,MAAM,GAAGlC,SAAS,CAACmC,OAAO;QAChC,MAAMG,OAAO,GAAGJ,MAAM,CAACK,UAAU,CAAC,IAAI,CAAC;QACvCD,OAAO,CAACqD,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEzD,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACG,MAAM,CAAC;QACpDC,OAAO,CAACwC,SAAS,CAACH,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;MAC9B,CAAC;IACH;EACF,CAAC;EAED,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B9E,UAAU,CAAC,IAAI,CAAC;MAGhB,IAAI,CAACJ,aAAa,IAAI,CAACF,QAAQ,EAAE;QAC/BM,UAAU,CAAC,KAAK,CAAC;QACjB6E,OAAO,CAAC,2CAA2C,CAAC;QACpDE,KAAK,CAAC,2CAA2C,CAAC;QAClD;MACF;MAEA,MAAMC,WAAW,GAAGtF,QAAQ,IAAIE,aAAa;MAE7C,MAAMsB,MAAM,GAAGiC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/C,MAAM9B,OAAO,GAAGJ,MAAM,CAACK,UAAU,CAAC,IAAI,CAAC;MAEvCL,MAAM,CAACE,KAAK,GAAG4D,WAAW,CAAC5D,KAAK;MAChCF,MAAM,CAACG,MAAM,GAAG2D,WAAW,CAAC3D,MAAM;MAElCC,OAAO,CAACwC,SAAS,CAACkB,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;MAEpC,MAAMC,IAAI,GAAG,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAK;QAC1CjE,MAAM,CAACkE,MAAM,CAACD,OAAO,EAAE,YAAY,CAAC;MACtC,CAAC,CAAC;MAEF,MAAME,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACL,IAAI,CAAC,EAAE,WAAW,CAAC;MAC/C,MAAMM,OAAO,GAAGrE,MAAM,CAACuB,SAAS,CAAC,YAAY,CAAC;MAC9CoC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEO,SAAS,CAAC;MAC9BR,OAAO,CAACC,GAAG,CAAC,UAAU,EAAES,OAAO,CAAC;MAEhC,MAAMC,WAAW,GAAGxG,SAAS,CAACmC,OAAO;MACrC,MAAMsE,YAAY,GAAGD,WAAW,CAACjE,UAAU,CAAC,IAAI,CAAC;MACjD,MAAMmE,SAAS,GAAGD,YAAY,CAACE,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEH,WAAW,CAACpE,KAAK,EAAEoE,WAAW,CAACnE,MAAM,CAAC;MACxF,MAAMuE,IAAI,GAAGF,SAAS,CAACE,IAAI;MAE3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAAC9D,MAAM,EAAE+D,CAAC,IAAI,CAAC,EAAE;QACvC,MAAMC,GAAG,GAAGF,IAAI,CAACC,CAAC,CAAC;QACnB,MAAME,KAAK,GAAGH,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC;QACzB,MAAMG,IAAI,GAAGJ,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC;QAExB,IAAIC,GAAG,KAAK,GAAG,IAAIC,KAAK,KAAK,GAAG,IAAIC,IAAI,KAAK,GAAG,EAAE;UAChDJ,IAAI,CAACC,CAAC,CAAC,GAAG,GAAG;UACbD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;UACjBD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;UACjBD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnB,CAAC,MAAM;UACLD,IAAI,CAACC,CAAC,CAAC,GAAG,CAAC;UACXD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UACfD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UACfD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QACnB;MACF;MAEA,MAAMI,UAAU,GAAG9C,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MACnD,MAAM8C,WAAW,GAAGD,UAAU,CAAC1E,UAAU,CAAC,IAAI,CAAC;MAC/C0E,UAAU,CAAC7E,KAAK,GAAGoE,WAAW,CAACpE,KAAK;MACpC6E,UAAU,CAAC5E,MAAM,GAAGmE,WAAW,CAACnE,MAAM;MACtC6E,WAAW,CAACC,YAAY,CAACT,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;MAEzC,MAAMU,QAAQ,GAAG,MAAM,IAAIlB,OAAO,CAAEC,OAAO,IAAK;QAC9Cc,UAAU,CAACb,MAAM,CAACD,OAAO,EAAE,YAAY,CAAC;MAC1C,CAAC,CAAC;MACF,MAAMkB,QAAQ,GAAG,IAAIf,IAAI,CAAC,CAACc,QAAQ,CAAC,EAAE,UAAU,CAAC;MACjD,MAAME,OAAO,GAAGL,UAAU,CAACxD,SAAS,CAAC,YAAY,CAAC;MAClDoC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEuB,QAAQ,CAAC;MAC7BxB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEwB,OAAO,CAAC;MAGhC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;MAC5BF,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEpB,SAAS,CAAC;MACxCkB,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEJ,QAAQ,CAAC;MAEtC,MAAMK,SAAS,GAAG,oCAAoC;MACtD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,SAAS,EAAE;QACtCG,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEP;MAER,CAAC,CAAC;MAEF,IAAII,QAAQ,CAACI,EAAE,EAAE;QACf/G,UAAU,CAAC,KAAK,CAAC;QACjB,MAAM4F,IAAI,GAAG,MAAMe,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCnC,OAAO,CAACC,GAAG,CAACc,IAAI,CAAC;QACjB,MAAMqB,QAAQ,GAAGrB,IAAI,CAACA,IAAI,CAAC3C,KAAK;QAEhC,IAAIgE,QAAQ,EAAE;UACZ,MAAMtD,GAAG,GAAG,IAAIQ,KAAK,CAAC,CAAC;UACvBR,GAAG,CAACuD,WAAW,GAAG,WAAW;UAC7BvD,GAAG,CAACM,MAAM,GAAG,MAAM;YACjBP,eAAe,CAACC,GAAG,CAAC;YACpBhE,WAAW,CAACgE,GAAG,CAAC;YAChBzD,cAAc,CAAC,IAAI,CAAC;UACtB,CAAC;UACDyD,GAAG,CAACS,GAAG,GAAG6C,QAAQ;UAClB1I,KAAK,CAAC4I,OAAO,CAAC,UAAU,CAAC;QAC3B,CAAC,MAAM;UACLtC,OAAO,CAACuC,KAAK,CAAC,yCAAyC,CAAC;UAExD7I,KAAK,CAAC6I,KAAK,CAAC,yCAAyC,CAAC;QACxD;MACF,CAAC,MAAM;QACLrC,KAAK,CAAC,4CAA4C,CAAC;QACnD,MAAM,IAAIsC,KAAK,CAAC,4CAA4C,CAAC;MAC/D;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdpH,UAAU,CAAC,KAAK,CAAC;MACjB+E,KAAK,CAAC,cAAc,CAAC;MACrBF,OAAO,CAACuC,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EACD,MAAME,WAAW,GAAI3E,KAAK,IAAK;IAC7BA,KAAK,CAACL,cAAc,CAAC,CAAC;IACtB,MAAM;MAAEiF;IAAO,CAAC,GAAG5E,KAAK;IACxB,IAAI,CAACnC,QAAQ,EAAE;MACbD,OAAO,CAAED,IAAI,IACTK,KAAK,CAACL,IAAI,GAAGiH,MAAM,GAAGpH,kBAAkB,GAAG,CAAC,CAAC,EAAEE,QAAQ,EAAED,QAAQ,CACrE,CAAC;IACH;EACF,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACZ,MAAMqD,MAAM,GAAGlC,SAAS,CAACmC,OAAO;IAChCD,MAAM,CAACsG,gBAAgB,CAAC,OAAO,EAAEF,WAAW,CAAC;IAC7C,OAAO,MAAM;MACTpG,MAAM,CAACuG,mBAAmB,CAAC,OAAO,EAAEH,WAAW,CAAC;IACpD,CAAC;EACL,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAGjB,oBACE7I,OAAA;IAAKiJ,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBlJ,OAAA;MAAKiJ,SAAS,EAAC,YAAY;MAACE,OAAO,EAAEA,CAAA,KAAM9H,YAAY,CAACqB,OAAO,CAACoC,KAAK,CAAC,CAAE;MAAAoE,QAAA,eACtElJ,OAAA,CAACJ,SAAS;QAAAwJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACNvJ,OAAA;MAAOwJ,QAAQ,EAAEzE,UAAW;MAAC0E,QAAQ,EAAE,KAAM;MAACC,GAAG,EAAErI,YAAa;MAACsI,IAAI,EAAC,MAAM;MAACC,MAAM;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGtFvJ,OAAA;MAAMiJ,SAAS,EAAG,oBAAmB3H,SAAS,GAAG,SAAS,GAAG,EAAG,EAAE;MAACoI,GAAG,EAAEzH,YAAa;MAAAiH,QAAA,GAClF5H,SAAS,gBAAGtB,OAAA,CAACH,OAAO;QAAAuJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAG,IAAI,eAC/BvJ,OAAA;QACE0J,GAAG,EAAEnJ,SAAU;QACfsJ,WAAW,EAAE1G,YAAa;QAC1B2G,WAAW,EAAEhG,IAAK;QAClBiG,SAAS,EAAEhG,WAAY;QACvBiG,YAAY,EAAEjG,WAAY;QAC1BkG,KAAK,EAAE;UACLC,SAAS,EAAG,SAAQrI,IAAK;QAC3B;MAAE;QAAAuH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNvJ,OAAA;MAAKiJ,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBlJ,OAAA;QAAKiJ,SAAS,EAAC,YAAY;QAAAC,QAAA,eAEzBlJ,OAAA;UACE2J,IAAI,EAAC,OAAO;UACZvH,GAAG,EAAC,IAAI;UAACC,GAAG,EAAC,KAAK;UAClBiC,KAAK,EAAEnE,SAAU;UACjB8I,SAAS,EAAC,OAAO;UACjBO,QAAQ,EAAEvF;QAAsB;UAAAmF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNvJ,OAAA;QAAKiJ,SAAS,EAAC,cAAc;QAACE,OAAO,EAAEhD,WAAY;QAAA+C,QAAA,EAAC;MAEpD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNvJ,OAAA;QAAKiJ,SAAS,EAAC,aAAa;QAACE,OAAO,EAAErD,IAAK;QAAAoD,QAAA,eACzClJ,OAAA,CAACR,gBAAgB;UAAA4J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACNvJ,OAAA;QAAKiJ,SAAS,EAAC,aAAa;QAACE,OAAO,EAAEnD,IAAK;QAAAkD,QAAA,eACzClJ,OAAA,CAACT,iBAAiB;UAAA6J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACNvJ,OAAA;QACEiJ,SAAS,EAAG,eAAczH,WAAW,GAAG,EAAE,GAAG,UAAW,EAAE;QAC1D2I,EAAE,EAAC,qBAAqB;QACxBhB,OAAO,EAAE3H,WAAW,GAAG+C,gBAAgB,GAAG,IAAK;QAC/CM,QAAQ,EAAC,YAAY;QAAAqE,QAAA,eAErBlJ,OAAA,CAACP,iBAAiB;UAAA2J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrJ,EAAA,CAlVID,aAAa;AAAAmK,EAAA,GAAbnK,aAAa;AAoVnB,eAAeA,aAAa;AAAC,IAAAmK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}