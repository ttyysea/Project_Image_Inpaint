/**
 * Given two points and a length, calculate and draw the catenary.
 *
 * TypeScript implementation:
 * Copyright (c) 2018, 2023 Jan Hug <me@dulnan.net>
 * Released under the MIT license.
 *
 * ----------------------------------------------------------------------------
 *
 * Original ActionScript implementation:
 * Copyright poiasd ( http://wonderfl.net/user/poiasd )
 * MIT License ( http://www.opensource.org/licenses/mit-license.php )
 * Downloaded from: http://wonderfl.net/c/8Bnl
 *
 * ----------------------------------------------------------------------------
 *
 * Archived by and downloaded from:
 * http://wa.zozuar.org/code.php?c=8Bnl
 */
export interface Point {
    x: number;
    y: number;
}
/**
 * The arguments for the quadraticCurveTo canvas function.
 */
export declare type QuadrativCurve = [cpx: number, cpy: number, x: number, y: number];
/**
 * The arguments for the lineTo canvas function.
 */
export declare type Line = [x: number, y: number];
/**
 * The result object if the approximation resulted in a catenary.
 */
export declare type CatenaryCurveQuadraticResult = {
    type: 'quadraticCurve';
    start: [x: number, y: number];
    curves: QuadrativCurve[];
};
/**
 * The result object if the approximation resulted in a singe line without any
 * visible curve.
 */
export declare type CatenaryCurveLineResult = {
    type: 'line';
    start: [x: number, y: number];
    lines: Line[];
};
/**
 * Possible result from the approximation.
 */
export declare type CatenaryCurveResult = CatenaryCurveLineResult | CatenaryCurveQuadraticResult;
export interface CatenaryOptions {
    /**
     * Number of segments of the chain.
     */
    segments?: number;
    /**
     * Maximum amount iterations for getting catenary parameters.
     */
    iterationLimit?: number;
}
/**
 * Pass in the return value from getCatenaryCurve and your canvas context to
 * draw the curve.
 */
export declare function drawResult(result: CatenaryCurveResult, context: CanvasRenderingContext2D): void;
/**
 * Draw the curve using lineTo.
 */
export declare function drawResultLine(result: CatenaryCurveLineResult, context: CanvasRenderingContext2D): void;
/**
 * Draw the curve using quadraticCurveTo.
 */
export declare function drawResultCurve(result: CatenaryCurveQuadraticResult, context: CanvasRenderingContext2D): void;
/**
 * Approximates the catenary curve between two points and returns the resulting
 * coordinates.
 *
 * If the curve would result in a single straight line, the approximation is
 * skipped and the input coordinates are returned.
 *
 * It returns an object with a property `type` to differenciate between `line`
 * and `quadraticCurve`. You can pass this object together with your 2D canvas
 * context to `drawResult` to directly draw it to the canvas.
 */
export declare function getCatenaryCurve(point1: Point, point2: Point, chainLength: number, options?: CatenaryOptions): CatenaryCurveResult;
